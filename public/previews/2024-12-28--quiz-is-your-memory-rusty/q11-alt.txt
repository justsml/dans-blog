# 11. Reference Counting

When should you use Rc (Reference Counting) in Rust?

Consider this example:

use std::rc::Rc;


struct SharedConfig {
    name: String,
    value: i32,
}


fn main() {
    let config = Rc::new(SharedConfig {
        name: "settings".to_string(),
        value: 42,
    });


    let config2 = Rc::clone(&config);
    // Both config and config2 share ownership
}
------

1. Rc is used for single-threaded environments
2. Rc is used for multi-threaded environments
3. Rc is only used for immutable data
4. Rc is only used for mutable data
5. Rc is for remote control

[credit](https://danlevy.net/)
