---
import { formatDistance } from "date-fns/formatDistance";

import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { InfoLabel } from "../components/ui/infoLabel";

import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

import AnalyticsTag from "../components/AnalyticsTag.astro";
import socialBanner from "../assets/social-banner.webp";

import { SITE_TITLE } from "../consts";

type Props = {
  children: any[];

  frontmatter?: {
    title: string;
    subTitle?: string;
    date?: string;
    modified?: string;
    tags?: string[];
    cover?: unknown;
    category?: string;
  };
};

const { title, subTitle, cover, category, date, modified } =
  Astro.props.frontmatter! || Astro.props;

console.log("Main.astro", Astro.props);

const createdAgo = date ? formatDistance(new Date(date), new Date()) : "";

const modifiedAgo = modified
  ? formatDistance(new Date(modified), new Date())
  : "";
const modifiedDate = modified ? new Date(modified) : null;
const modTime = modifiedDate ? modifiedDate.toISOString().split("T")[0] : "";
const pubTime = date ? new Date(date).toISOString().split("T")[0] : "";

const siteTitle = title || SITE_TITLE;

const coverUrl =
  cover && typeof cover === "object" && "src" in cover
    ? (cover as ImageMetadata)
    : typeof cover === "string" && cover
      ? cover
      : socialBanner;
---

<html lang="en">
  <head>
    <BaseHead title={siteTitle} description={`${subTitle}`} image={coverUrl} />
    {modTime && <meta http-equiv="last-modified" content={modTime} />}
    {modTime && <meta property="article:modified_time" content={modTime} />}
    {pubTime && <meta property="article:published_time" content={pubTime} />}
  </head>

  <body>
    <Header className="content-grid" date={date} modified={modified} />
    <main class="content-grid">
      {title && <h1>{title}</h1>}
      {subTitle && <h2>{subTitle}</h2>}
      {
        createdAgo ||
          (category && (
            <div class="info">
              <InfoLabel
                text={[
                  `created ${createdAgo} ago`,
                  `updated ${modifiedAgo} ago`,
                ]}
              />

              <InfoLabel text={category!} />
            </div>
          ))
      }

      {
        cover && typeof cover === "object" && "src" in cover && (
          <Image
            src={cover as ImageMetadata}
            width="400"
            alt={title}
            class="full-width"
          />
        )
      }

      <slot />
    </main>
    <Footer />
    <AnalyticsTag />
  </body>
</html>
