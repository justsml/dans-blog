---
import type { SearchIssuesResponse } from "../../types.ts";

import { ossContributions } from "../../shared/ossData.ts";
import { RepoCard } from "./RepoCard.tsx";
import { GITHUB_HANDLE } from "../../consts.ts";
import { makeLogs } from "../LogHelper.ts";
import { GithubSearch } from "../../shared/githubSearch.ts";
import ms from "ms";
import "./GitContribution.css";

const { GITHUB_TOKEN } = process.env;

if (!GITHUB_TOKEN || GITHUB_TOKEN.length < 1)
  throw new Error("GITHUB_TOKEN is required to fetch GitHub data");

const log = makeLogs("ossContributions");

const stats = new GithubSearch({
  api_key: GITHUB_TOKEN!,
  per_page: 100,
  ttl_seconds: ms(`2d`),
  exit_on_error: true,
});

log("ossContributions", ossContributions.length);
---

<h3>My Open Source Contributions ({ossContributions.length})</h3>
<section class="contrib-grid">
  {
    ossContributions.map(async (contrib) => {
      const pr = await stats
        .pullRequests(contrib.repo, `author:${GITHUB_HANDLE}`)
        .catch((err) => {
          console.error("Failed to pull requests: err", err);
          return { items: [] } as unknown as SearchIssuesResponse;
        });
      log("pr", pr);

      return (
        <RepoCard
          client:idle
          defaultPullData={pr}
          contribution={contrib}
          author={GITHUB_HANDLE}
        />
      );
    })
  };
</section>
