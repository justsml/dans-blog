---

import { ossContributions } from "../../shared/ossData.ts";
import { RepoCard } from "./RepoCard.tsx";
import { GITHUB_HANDLE } from "../../consts.ts";
import { makeLogs } from "../LogHelper.ts";
import { fetchUserPullRequests } from "../../shared/githubGqlApi.ts";
import { _isValidRepo } from "../../shared/githubGqlApi.ts";
import "./GitContribution.css";

const { GITHUB_TOKEN } = process.env;

if (!GITHUB_TOKEN || GITHUB_TOKEN.length < 1)
  throw new Error("GITHUB_TOKEN is required to fetch GitHub data");

const log = makeLogs("ossContributions");

log("ossContributions", ossContributions.length);
---

<h3>My Open Source Contributions ({ossContributions.length})</h3>

<p>This data is statically generated only on a fresh build & deploy.</p>
<p>Last build was: {new Date().toLocaleDateString()}</p>

<section class="contrib-grid">
  {
    ossContributions.map(async (contrib) => {
      const targetRepo = contrib.renamed ?? contrib.repo;
      log("targetRepo", targetRepo);
      if (!_isValidRepo(targetRepo)) {
        log("Invalid Repo", targetRepo);
        return null;
      }
      const pr = await fetchUserPullRequests(
        targetRepo,
        GITHUB_HANDLE,
      );
      log("pr", pr);

      return (
        <RepoCard
          client:idle
          defaultPullData={pr}
          contribution={contrib}
          author={GITHUB_HANDLE}
        />
      );
    })
  }
</section>
