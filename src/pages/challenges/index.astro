---
import Page from "../../layouts/Page.astro";

import omit from "lodash/omit";
import { PostCollections } from "../../shared/dataCache";
import { pageSize } from "../../shared/pagination";
import { Badge } from "../../components/ui/badge.tsx";
import { QuizCard } from "./QuizCard.tsx";

import type { ArticlePost, QuizPost } from "../../types";
import { slugify } from "../../shared/pathHelpers.ts";
import { brightColors } from "../../content/colors.ts";

import "@/styles/nav.css";
import "@/styles/global.css";
import "./challenges.css";
// import ArticleFilterLinks from "../../components/ArticleFilterLinks.astro";

let posts = PostCollections._quizPosts
  .map(
    (p) => omit(p as ArticlePost, ["data.cover", "data.cover_icon"])
    // omit(p as ArticlePost, ["data.body", "data.cover", "data.cover_icon"])
  )
  .concat() as ArticlePost[];

const subCategoryList: string[] = [
  ...new Set(posts.map((p) => p.data.subCategory)),
].filter(Boolean) as string[];
const subCategoryCounts = subCategoryList.reduce((acc, subCategory) => {
  // @ts-expect-error
  acc[subCategory] = posts.filter(
    (p) => p.data.subCategory === subCategory
  ).length;
  return acc;
}, {});
const subCategoryColors = subCategoryList.reduce((acc, subCategory, idx) => {
  // @ts-expect-error
  acc["cat-" + slugify(subCategory)] = brightColors[idx % brightColors.length];
  return acc;
}, {});

console.log(
  `Found ${subCategoryList.length} subcategories %o  %o    %o`,
  subCategoryList,
  subCategoryCounts,
  subCategoryColors
);

posts.sort((_a: ArticlePost, _b: ArticlePost) => {
  const a = _a.data.subCategory;
  const b = _b.data.subCategory;

  if (a == null || b == null) {
    return 0;
  }
  if (a < b) {
    return -1;
  } else if (a > b) {
    return 1;
  }
  return 0;
});

// 1. Sort by subcategory
// 2. Decorate with QuizPost

const quizList: QuizPost[] = posts.map((p, idx) => {
  // @ts-expect-error
  const questionCount = p.body?.split("</Challenge>").length - 1;

  return {
    ...p,
    data: {
      ...p.data,
      index: idx,
      subCategory: p.data.subCategory || "Uncategorized",
      correctCount: 0,
      questionCount,
    },
  };
});

// console.log("QuizList %o", quizList);
---

<Page>
  <div class="filter-toolbar">
    {/* <ArticleFilterLinks /> */}
    <section class="tag-filters skill-level">
      <Badge>Beginner</Badge>
      <Badge>Intermediate</Badge>
      <Badge>Advanced</Badge>
    </section>
    <section class="status-filters">
      <Badge variant={"outline"}>Not Started</Badge>
      <Badge variant={"outline"}>Started</Badge>
      <Badge variant={"outline"}>Complete</Badge>
    </section>
  </div>
  <div class:list={["quiz-list"]}>
    {
      quizList
        .filter(
          ({ data: { unlisted, hidden } }) =>
            hidden !== true
        )
        .map((props, index) => (
          <QuizCard
            client:load
            article={props}
            width={200}
            subCategoryCounts={subCategoryCounts}
            subCategoryList={subCategoryList}
          />
        ))
    }
    <!-- {nextPageAttrs && <a hx-get={defaultNextUrl} hx-swap="afterend">Next</a>} -->
  </div>
</Page>
